#!/usr/bin/env python3
"""
Script de configura√ß√£o e teste do sistema AURALIS
Configura banco de dados e processa arquivos de teste
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

def verificar_dependencias():
    """Verifica se todas as depend√™ncias est√£o instaladas"""
    print("üîç Verificando depend√™ncias...")
    
    dependencias = {
        'openai': 'OpenAI API',
        'supabase': 'Supabase client',
        'numpy': 'NumPy',
        'customtkinter': 'CustomTkinter'
    }
    
    faltando = []
    for modulo, nome in dependencias.items():
        try:
            __import__(modulo)
            print(f"   ‚úÖ {nome} instalado")
        except ImportError:
            print(f"   ‚ùå {nome} n√£o encontrado")
            faltando.append(modulo)
    
    if faltando:
        print(f"\n‚ö†Ô∏è  Instale as depend√™ncias faltantes com:")
        print(f"   pip install {' '.join(faltando)}")
        return False
    
    return True

def verificar_env():
    """Verifica se as vari√°veis de ambiente est√£o configuradas"""
    print("\nüîê Verificando configura√ß√µes...")
    
    variaveis = [
        'OPENAI_API_KEY',
        'SUPABASE_URL',
        'SUPABASE_ANON_KEY',
        'SUPABASE_SERVICE_ROLE_KEY'
    ]
    
    configurado = True
    for var in variaveis:
        valor = os.getenv(var)
        if valor:
            print(f"   ‚úÖ {var} configurada")
        else:
            print(f"   ‚ùå {var} n√£o encontrada")
            configurado = False
    
    if not configurado:
        print("\n‚ö†Ô∏è  Configure as vari√°veis no arquivo .env")
        print("\nExemplo de .env:")
        print("OPENAI_API_KEY=sua-chave-aqui")
        print("SUPABASE_URL=sua-url-aqui")
        print("SUPABASE_ANON_KEY=sua-chave-anon-aqui")
        print("SUPABASE_SERVICE_ROLE_KEY=sua-chave-service-aqui")
    
    return configurado

def criar_arquivo_teste():
    """Cria arquivo de teste se n√£o existir"""
    pasta_teste = Path("teste_reuniao")
    pasta_teste.mkdir(exist_ok=True)
    
    arquivo_teste = pasta_teste / "reuniao_04_02_2024.txt"
    
    if not arquivo_teste.exists():
        print("\nüìù Criando arquivo de teste...")
        
        conteudo = """Reuni√£o de Planejamento Estrat√©gico - 04/02/2024

Participantes presentes: Jo√£o Silva (Diretor de Tecnologia), Maria Santos (Gerente de Projetos), Pedro Costa (Analista S√™nior), Ana Oliveira (Coordenadora de Desenvolvimento).

A reuni√£o iniciou com Jo√£o Silva apresentando os resultados do √∫ltimo trimestre. Foram destacados os principais pontos positivos, incluindo a conclus√£o do projeto Alpha com duas semanas de anteced√™ncia e economia de 15% no or√ßamento previsto. Maria Santos complementou informando que a equipe de desenvolvimento superou as metas de produtividade em 20%.

Durante a discuss√£o sobre os desafios enfrentados, Pedro Costa levantou a quest√£o da necessidade de moderniza√ß√£o da infraestrutura de servidores. Ficou decidido que ser√° realizado um estudo detalhado sobre migra√ß√£o para cloud, com prazo de entrega at√© o final de mar√ßo. Pedro ficou respons√°vel por liderar este estudo em conjunto com a equipe de infraestrutura.

Ana Oliveira apresentou a proposta de implementa√ß√£o de uma nova metodologia √°gil adaptada √†s necessidades espec√≠ficas da empresa. Ap√≥s debate, foi aprovada a implementa√ß√£o piloto em dois projetos: Beta e Gamma. Ana ser√° a respons√°vel por conduzir os treinamentos necess√°rios e acompanhar a adapta√ß√£o das equipes.

Sobre o or√ßamento para o pr√≥ximo trimestre, Jo√£o Silva informou que foi aprovado um aumento de 30% no investimento em capacita√ß√£o t√©cnica. Maria Santos ficou encarregada de elaborar o plano de treinamentos, priorizando as tecnologias emergentes identificadas como estrat√©gicas: intelig√™ncia artificial, automa√ß√£o de processos e seguran√ßa cibern√©tica.

Foi discutida tamb√©m a necessidade de contrata√ß√£o de novos profissionais. Ficou definido que ser√£o abertas 5 vagas imediatas: 2 desenvolvedores s√™nior, 1 arquiteto de solu√ß√µes, 1 especialista em seguran√ßa e 1 analista de dados. O processo seletivo deve iniciar na pr√≥xima semana, sob coordena√ß√£o do RH com apoio t√©cnico de Pedro Costa.

Em rela√ß√£o aos projetos em andamento, Maria Santos atualizou o status: Projeto Delta est√° em 70% de conclus√£o e dentro do cronograma; Projeto Epsilon enfrentou atrasos devido a mudan√ßas de escopo, nova previs√£o de entrega para abril; Projeto Zeta foi conclu√≠do com sucesso e j√° est√° em produ√ß√£o.

Decis√µes importantes tomadas:
1. Aprovar or√ßamento de R$ 500.000 para moderniza√ß√£o da infraestrutura
2. Implementar programa de trabalho h√≠brido a partir de mar√ßo
3. Criar comit√™ de inova√ß√£o liderado por Ana Oliveira
4. Estabelecer parceria com universidade local para programa de est√°gio
5. Investir em ferramentas de colabora√ß√£o remota

Pr√≥ximos passos acordados:
- Jo√£o Silva: Apresentar plano estrat√©gico consolidado at√© 15/02
- Maria Santos: Finalizar cronograma de projetos Q2 at√© 20/02
- Pedro Costa: Entregar relat√≥rio de infraestrutura at√© 28/02
- Ana Oliveira: Iniciar piloto de metodologia √°gil em 01/03

A reuni√£o foi encerrada √†s 16h com o compromisso de reuni√£o de acompanhamento em 15 dias."""
        
        arquivo_teste.write_text(conteudo, encoding='utf-8')
        print(f"   ‚úÖ Arquivo de teste criado: {arquivo_teste}")
    else:
        print(f"\n‚úÖ Arquivo de teste j√° existe: {arquivo_teste}")

def main():
    print("=== CONFIGURA√á√ÉO DO SISTEMA AURALIS ===\n")
    
    # Verificar depend√™ncias
    if not verificar_dependencias():
        sys.exit(1)
    
    # Verificar configura√ß√µes
    if not verificar_env():
        sys.exit(1)
    
    # Criar arquivo de teste
    criar_arquivo_teste()
    
    print("\n‚úÖ Sistema configurado e pronto para uso!")
    print("\nüìå Pr√≥ximos passos:")
    print("1. Execute o SQL em create_tables.sql no Supabase")
    print("2. Execute: python main.py (para processar reuni√µes e criar usu√°rios)")
    print("3. Execute: python FRONT.py (para iniciar a interface)")

if __name__ == "__main__":
    main()